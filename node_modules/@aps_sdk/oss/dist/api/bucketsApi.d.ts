import type { AxiosPromise, AxiosInstance } from 'axios';
import { ApsServiceRequestConfig, IApsConfiguration, SdkManager, ApiResponse } from "@aps_sdk/autodesk-sdkmanager";
import { RequestArgs, BaseApi } from '../base';
import { Bucket } from '../model';
import { Buckets } from '../model';
import { Region } from '../model';
import { CreateBucketsPayload } from '../model';
/**
 * BucketsApi - axios parameter creator
 * @export
 */
export declare const BucketsApiAxiosParamCreator: (apsConfiguration?: IApsConfiguration) => {
    /**
     * Creates a bucket.   Buckets are virtual container within the Object Storage Service (OSS), which you can use to store and manage objects (files) in the cloud. The application creating the bucket is the owner of the bucket.  **Note:** Do not use this operation to create buckets for BIM360 Document Management. Use [POST projects/{project_id}/storage](/en/docs/data/v2/reference/http/projects-project_id-storage-POST>) instead. For details, see [Upload Files to BIM 360 Document Management](/en/docs/bim360/v1/tutorials/document-management/upload-document).
     * @summary Create Bucket
     * @param {CreateBucketsPayload} policyKey
     * @param {Region} [xAdsRegion] Specifies where the bucket must be stored. Possible values are: - &#x60;&#x60;US&#x60;&#x60; - (Default) Data center for the US region. - &#x60;&#x60;EMEA&#x60;&#x60; - Data center for the European Union, Middle East, and Africa. - &#x60;&#x60;APAC&#x60;&#x60; -  (Beta) Data center for Australia. **Note:** Beta features are subject to change. Please do not use in production environments.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBucket: (accessToken: string, policyKey: CreateBucketsPayload, xAdsRegion: Region, options?: ApsServiceRequestConfig) => Promise<RequestArgs>;
    /**
     * Deletes the specified bucket. Only the application that owns the bucket can call this operation. All other applications that call this operation will receive a \"403 Forbidden\" error.   The initial processing of a bucket deletion request can be time-consuming. So, we recommend only deleting buckets containing a few objects, like those typically used for acceptance testing and prototyping.   **Note:** Bucket keys will not be immediately available for reuse.
     * @summary Delete Bucket
     * @param {string} bucketKey The bucket key of the bucket to delete.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteBucket: (accessToken: string, bucketKey: string, options?: ApsServiceRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns detailed information about the specified bucket.  **Note:** Only the application that owns the bucket can call this operation. All other applications that call this operation will receive a \"403 Forbidden\" error.
     * @summary Get Bucket Details
     * @param {string} bucketKey The bucket key of the bucket to query.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBucketDetails: (accessToken: string, bucketKey: string, options?: ApsServiceRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of buckets owned by the application.
     * @summary List Buckets
     * @param {Region} [region] Specifies where the bucket containing the object stored. Possible values are:  - &#x60;&#x60;US&#x60;&#x60; - (Default) Data center for the US region. - &#x60;&#x60;EMEA&#x60;&#x60; - Data center for the European Union, Middle East, and Africa. - &#x60;&#x60;APAC&#x60;&#x60; -  (Beta) Data center for Australia.  **Note:** Beta features are subject to change. Please do not use in production environments.
     * @param {number} [limit] The number of items you want per page. Acceptable values &#x3D; 1-100. Default &#x3D; 10.
     * @param {string} [startAt] The ID of the last item that was returned in the previous result set.  It enables the system to return subsequent items starting from the next one after the specified ID.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBuckets: (accessToken: string, region?: Region, limit?: number, startAt?: string, options?: ApsServiceRequestConfig) => Promise<RequestArgs>;
};
/**
 * BucketsApi - functional programming interface
 * @export
 */
export declare const BucketsApiFp: (sdkManager?: SdkManager) => {
    /**
     * Creates a bucket.   Buckets are virtual container within the Object Storage Service (OSS), which you can use to store and manage objects (files) in the cloud. The application creating the bucket is the owner of the bucket.  **Note:** Do not use this operation to create buckets for BIM360 Document Management. Use [POST projects/{project_id}/storage](/en/docs/data/v2/reference/http/projects-project_id-storage-POST>) instead. For details, see [Upload Files to BIM 360 Document Management](/en/docs/bim360/v1/tutorials/document-management/upload-document).
     * @summary Create Bucket
     * @param {CreateBucketsPayload} policyKey
     * @param {Region} [xAdsRegion] Specifies where the bucket must be stored. Possible values are: - &#x60;&#x60;US&#x60;&#x60; - (Default) Data center for the US region. - &#x60;&#x60;EMEA&#x60;&#x60; - Data center for the European Union, Middle East, and Africa. - &#x60;&#x60;APAC&#x60;&#x60; -  (Beta) Data center for Australia. **Note:** Beta features are subject to change. Please do not use in production environments.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBucket(accessToken: string, policyKey: CreateBucketsPayload, xAdsRegion: Region, options?: ApsServiceRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Bucket>>;
    /**
     * Deletes the specified bucket. Only the application that owns the bucket can call this operation. All other applications that call this operation will receive a \"403 Forbidden\" error.   The initial processing of a bucket deletion request can be time-consuming. So, we recommend only deleting buckets containing a few objects, like those typically used for acceptance testing and prototyping.   **Note:** Bucket keys will not be immediately available for reuse.
     * @summary Delete Bucket
     * @param {string} bucketKey The bucket key of the bucket to delete.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteBucket(accessToken: string, bucketKey: string, options?: ApsServiceRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Returns detailed information about the specified bucket.  **Note:** Only the application that owns the bucket can call this operation. All other applications that call this operation will receive a \"403 Forbidden\" error.
     * @summary Get Bucket Details
     * @param {string} bucketKey The bucket key of the bucket to query.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBucketDetails(accessToken: string, bucketKey: string, options?: ApsServiceRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Bucket>>;
    /**
     * Returns a list of buckets owned by the application.
     * @summary List Buckets
     * @param {Region} [region] Specifies where the bucket containing the object stored. Possible values are:  - &#x60;&#x60;US&#x60;&#x60; - (Default) Data center for the US region. - &#x60;&#x60;EMEA&#x60;&#x60; - Data center for the European Union, Middle East, and Africa. - &#x60;&#x60;APAC&#x60;&#x60; -  (Beta) Data center for Australia.  **Note:** Beta features are subject to change. Please do not use in production environments.
     * @param {number} [limit] The number of items you want per page. Acceptable values &#x3D; 1-100. Default &#x3D; 10.
     * @param {string} [startAt] The ID of the last item that was returned in the previous result set.  It enables the system to return subsequent items starting from the next one after the specified ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBuckets(accessToken: string, region?: Region, limit?: number, startAt?: string, options?: ApsServiceRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Buckets>>;
};
/**
 * BucketsApi - interface
 * @export
 * @interface BucketsApi
 */
export interface BucketsApiInterface {
    /**
     * Creates a bucket.   Buckets are virtual container within the Object Storage Service (OSS), which you can use to store and manage objects (files) in the cloud. The application creating the bucket is the owner of the bucket.  **Note:** Do not use this operation to create buckets for BIM360 Document Management. Use [POST projects/{project_id}/storage](/en/docs/data/v2/reference/http/projects-project_id-storage-POST>) instead. For details, see [Upload Files to BIM 360 Document Management](/en/docs/bim360/v1/tutorials/document-management/upload-document).
     * @summary Create Bucket
     * @param {CreateBucketsPayload} policyKey
     * @param {Region} [xAdsRegion] Specifies where the bucket must be stored. Possible values are: - &#x60;&#x60;US&#x60;&#x60; - (Default) Data center for the US region. - &#x60;&#x60;EMEA&#x60;&#x60; - Data center for the European Union, Middle East, and Africa. - &#x60;&#x60;APAC&#x60;&#x60; -  (Beta) Data center for Australia. **Note:** Beta features are subject to change. Please do not use in production environments.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApiInterface
     */
    createBucket(accessToken: string, policyKey: CreateBucketsPayload, xAdsRegion: Region, options?: ApsServiceRequestConfig): Promise<ApiResponse>;
    /**
     * Deletes the specified bucket. Only the application that owns the bucket can call this operation. All other applications that call this operation will receive a \"403 Forbidden\" error.   The initial processing of a bucket deletion request can be time-consuming. So, we recommend only deleting buckets containing a few objects, like those typically used for acceptance testing and prototyping.   **Note:** Bucket keys will not be immediately available for reuse.
     * @summary Delete Bucket
     * @param {string} bucketKey The bucket key of the bucket to delete.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApiInterface
     */
    deleteBucket(accessToken: string, bucketKey: string, options?: ApsServiceRequestConfig): Promise<ApiResponse>;
    /**
     * Returns detailed information about the specified bucket.  **Note:** Only the application that owns the bucket can call this operation. All other applications that call this operation will receive a \"403 Forbidden\" error.
     * @summary Get Bucket Details
     * @param {string} bucketKey The bucket key of the bucket to query.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApiInterface
     */
    getBucketDetails(accessToken: string, bucketKey: string, options?: ApsServiceRequestConfig): Promise<ApiResponse>;
    /**
     * Returns a list of buckets owned by the application.
     * @summary List Buckets
     * @param {Region} [region] Specifies where the bucket containing the object stored. Possible values are:  - &#x60;&#x60;US&#x60;&#x60; - (Default) Data center for the US region. - &#x60;&#x60;EMEA&#x60;&#x60; - Data center for the European Union, Middle East, and Africa. - &#x60;&#x60;APAC&#x60;&#x60; -  (Beta) Data center for Australia.  **Note:** Beta features are subject to change. Please do not use in production environments.
     * @param {number} [limit] The number of items you want per page. Acceptable values &#x3D; 1-100. Default &#x3D; 10.
     * @param {string} [startAt] The ID of the last item that was returned in the previous result set.  It enables the system to return subsequent items starting from the next one after the specified ID.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApiInterface
     */
    getBuckets(accessToken: string, region?: Region, limit?: number, startAt?: string, options?: ApsServiceRequestConfig): Promise<ApiResponse>;
}
/**
 * BucketsApi - object-oriented interface
 * @export
 * @class BucketsApi
 * @extends {BaseApi}
 */
export declare class BucketsApi extends BaseApi implements BucketsApiInterface {
    private logger;
    /**
     * Creates a bucket.   Buckets are virtual container within the Object Storage Service (OSS), which you can use to store and manage objects (files) in the cloud. The application creating the bucket is the owner of the bucket.  **Note:** Do not use this operation to create buckets for BIM360 Document Management. Use [POST projects/{project_id}/storage](/en/docs/data/v2/reference/http/projects-project_id-storage-POST>) instead. For details, see [Upload Files to BIM 360 Document Management](/en/docs/bim360/v1/tutorials/document-management/upload-document).
     * @summary Create Bucket
     * @param {CreateBucketsPayload} policyKey
     * @param {Region} [xAdsRegion] Specifies where the bucket must be stored. Possible values are: - &#x60;&#x60;US&#x60;&#x60; - (Default) Data center for the US region. - &#x60;&#x60;EMEA&#x60;&#x60; - Data center for the European Union, Middle East, and Africa. - &#x60;&#x60;APAC&#x60;&#x60; -  (Beta) Data center for Australia. **Note:** Beta features are subject to change. Please do not use in production environments.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApi
     */
    createBucket(accessToken: string, policyKey: CreateBucketsPayload, xAdsRegion: Region, options?: ApsServiceRequestConfig): Promise<ApiResponse>;
    /**
     * Deletes the specified bucket. Only the application that owns the bucket can call this operation. All other applications that call this operation will receive a \"403 Forbidden\" error.   The initial processing of a bucket deletion request can be time-consuming. So, we recommend only deleting buckets containing a few objects, like those typically used for acceptance testing and prototyping.   **Note:** Bucket keys will not be immediately available for reuse.
     * @summary Delete Bucket
     * @param {string} bucketKey The bucket key of the bucket to delete.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApi
     */
    deleteBucket(accessToken: string, bucketKey: string, options?: ApsServiceRequestConfig): Promise<ApiResponse>;
    /**
     * Returns detailed information about the specified bucket.  **Note:** Only the application that owns the bucket can call this operation. All other applications that call this operation will receive a \"403 Forbidden\" error.
     * @summary Get Bucket Details
     * @param {string} bucketKey The bucket key of the bucket to query.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApi
     */
    getBucketDetails(accessToken: string, bucketKey: string, options?: ApsServiceRequestConfig): Promise<ApiResponse>;
    /**
     * Returns a list of buckets owned by the application.
     * @summary List Buckets
     * @param {Region} [region] Specifies where the bucket containing the object stored. Possible values are:  - &#x60;&#x60;US&#x60;&#x60; - (Default) Data center for the US region. - &#x60;&#x60;EMEA&#x60;&#x60; - Data center for the European Union, Middle East, and Africa. - &#x60;&#x60;APAC&#x60;&#x60; -  (Beta) Data center for Australia.  **Note:** Beta features are subject to change. Please do not use in production environments.
     * @param {number} [limit] The number of items you want per page. Acceptable values &#x3D; 1-100. Default &#x3D; 10.
     * @param {string} [startAt] The ID of the last item that was returned in the previous result set.  It enables the system to return subsequent items starting from the next one after the specified ID.
     * @param accessToken bearer access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BucketsApi
     */
    getBuckets(accessToken: string, region?: Region, limit?: number, startAt?: string, options?: ApsServiceRequestConfig): Promise<ApiResponse>;
}
