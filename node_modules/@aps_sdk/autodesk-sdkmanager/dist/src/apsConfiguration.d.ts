import { ApsConfiguration as IApsConfiguration } from './iApsConfiguration';
export declare enum AdskEnvironment {
    Dev = 0,
    Stg = 1,
    Prd = 2,
    Local = 3
}
export interface ApsConfigurationParams {
    environment?: AdskEnvironment;
    baseOptions?: any;
    formDataCtor?: new () => any;
}
export declare class ApsConfiguration implements IApsConfiguration {
    baseAddress: URL;
    /**
     * base options for axios calls
     *
     * @type {any}
     * @memberof Configuration
     */
    readonly baseOptions?: any;
    /**
     * The FormData constructor that will be used to create multipart form data
     * requests. You can inject this here so that execution environments that
     * do not support the FormData class can still run the generated client.
     *
     * @type {new () => FormData}
     */
    readonly formDataCtor?: new () => any;
    get BaseAddress(): URL;
    set BaseAddress(baseAddress: URL);
    constructor(apsConfigurationParams: ApsConfigurationParams);
}
