"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SdkManager = void 0;
const apsConfiguration_1 = require("./apsConfiguration");
const resiliencyConfiguration_1 = require("./resiliencyConfiguration");
const apsClient_1 = require("./apsClient");
const logger_1 = require("./logger");
class SdkManager {
    constructor(apsConfiguration, resiliencyConfiguration, authClient, logger) {
        this._apsConfiguration = apsConfiguration !== null && apsConfiguration !== void 0 ? apsConfiguration : new apsConfiguration_1.ApsConfiguration({});
        this._resiliencyConfiguration =
            resiliencyConfiguration !== null && resiliencyConfiguration !== void 0 ? resiliencyConfiguration : new resiliencyConfiguration_1.ResiliencyConfiguration();
        this._logger = logger !== null && logger !== void 0 ? logger : new logger_1.Logger();
        this._apsClient = new apsClient_1.ApsClient(this._resiliencyConfiguration, this._logger);
        this._authClient = authClient;
    }
    set logger(logger) {
        this._logger = logger;
    }
    get logger() {
        return this._logger;
    }
    static getInstance(apsConfiguration, resiliencyConfiguration, authClient, logger) {
        return new SdkManager(apsConfiguration, resiliencyConfiguration, authClient, logger);
    }
    get apsClient() {
        return this._apsClient;
    }
    get authClient() {
        return this._authClient;
    }
    get apsConfiguration() {
        return this._apsConfiguration;
    }
    set apsConfiguration(apsConfiguration) {
        this._apsConfiguration = apsConfiguration;
    }
    toggleLogging(enabled) {
        this._logger.setEnabled(enabled);
    }
}
exports.SdkManager = SdkManager;
