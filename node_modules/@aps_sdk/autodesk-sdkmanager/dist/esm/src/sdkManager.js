import { ApsConfiguration } from './apsConfiguration';
import { ResiliencyConfiguration } from './resiliencyConfiguration';
import { ApsClient } from './apsClient';
import { Logger } from './logger';
export class SdkManager {
    constructor(apsConfiguration, resiliencyConfiguration, authClient, logger) {
        this._apsConfiguration = apsConfiguration !== null && apsConfiguration !== void 0 ? apsConfiguration : new ApsConfiguration({});
        this._resiliencyConfiguration =
            resiliencyConfiguration !== null && resiliencyConfiguration !== void 0 ? resiliencyConfiguration : new ResiliencyConfiguration();
        this._logger = logger !== null && logger !== void 0 ? logger : new Logger();
        this._apsClient = new ApsClient(this._resiliencyConfiguration, this._logger);
        this._authClient = authClient;
    }
    set logger(logger) {
        this._logger = logger;
    }
    get logger() {
        return this._logger;
    }
    static getInstance(apsConfiguration, resiliencyConfiguration, authClient, logger) {
        return new SdkManager(apsConfiguration, resiliencyConfiguration, authClient, logger);
    }
    get apsClient() {
        return this._apsClient;
    }
    get authClient() {
        return this._authClient;
    }
    get apsConfiguration() {
        return this._apsConfiguration;
    }
    set apsConfiguration(apsConfiguration) {
        this._apsConfiguration = apsConfiguration;
    }
    toggleLogging(enabled) {
        this._logger.setEnabled(enabled);
    }
}
